M_Boston<-lm(formula = BostonHousing$medv~BostonHousing$crim+BostonHousing$zn+BostonHousing$ptratio+BostonHousing$chas,data=BostonHousing)
summary(M_Boston)
M_Boston1<-lm(formula=BostonHousing$medv~BostonHousing$chas, data=BostonHousing)
M_Boston1
# we can calculate the values of both houses by utilizing the coeff. from the given model.
# we are consider Two houses as H0 ,H1
# H 0  has no chas while H 1 has chas.
H0<-M_Boston1$coefficients[1]+M_Boston1$coefficients[2]*0
H1<-M_Boston1$coefficients[1]+M_Boston1$coefficients[2]*1
print(paste('The House with the chas and is more expensive,',H1-H0))
M_Boston2<-lm(formula=BostonHousing$medv~BostonHousing$ptratio,data=BostonHousing)
M_Boston2
# Because of the coeff.is negative ,we may deduce that increased ptratio will result in lower pricing.
# we may calculate the values of both houses using the coeff. of the given model.
# H 0 has no chas while H1 has chas.
H3<-M_Boston2$coefficients[1]+M_Boston2$coefficients[2]*15
H4<-M_Boston2$coefficients[1]+M_Boston2$coefficients[2]*18
print(paste('Houses with a pupil-teacher ratio of 15, are more expensive and the most expensive was ',H3-H4 ))
summary(M_Boston)
anova(M_Boston)
knitr::opts_chunk$set(echo= TRUE)
M_XY=lm(Y~X)
summary(M_XY)
M_XY$coefficients
knitr::opts_chunk$set(echo= TRUE)
set.seed(2017)
X=runif(100)*10
Y=X*4+3.45
Y=rnorm(100)*0.29*Y+Y
plot (X,Y)
M_XY=lm(Y~X)
summary(M_XY)
M_XY$coefficients
cor(X,Y)^2
head(mtcars)
J_model<-lm(mtcars$hp~mtcars$mpg,data=mtcars)
summary(J_model)
Ch_model<-lm(mtcars$hp~mtcars$mpg,data=mtcars)
summary(Ch_model)
M_HP<-lm(mtcars$hp~mtcars$mpg+mtcars$cyl,data=mtcars)
summary(M_HP)
M_HP$coefficients
predict_hp<-(M_HP$coefficients[2]*22)+(M_HP$coefficients[3]*4)+M_HP$coefficients[1]
print(paste('The predicted Horse power of a car with FOUR calenders and a 22-mpg fuel Economy is ',predict_hp))
library(mlbench)
data(BostonHousing)
M_Boston<-lm(formula = BostonHousing$medv~BostonHousing$crim+BostonHousing$zn+BostonHousing$ptratio+BostonHousing$chas,data=BostonHousing)
summary(M_Boston)
M_Boston1<-lm(formula=BostonHousing$medv~BostonHousing$chas, data=BostonHousing)
M_Boston1
# we can calculate the values of both houses by utilizing the coeff. from the given model.
# we are consider Two houses as H0 ,H1
# H 0  has no chas while H 1 has chas.
H0<-M_Boston1$coefficients[1]+M_Boston1$coefficients[2]*0
H1<-M_Boston1$coefficients[1]+M_Boston1$coefficients[2]*1
print(paste('The House with the chas and is more expensive,',H1-H0))
M_Boston2<-lm(formula=BostonHousing$medv~BostonHousing$ptratio,data=BostonHousing)
M_Boston2
# Because of the coeff.is negative ,we may deduce that increased ptratio will result in lower pricing.
# we may calculate the values of both houses using the coeff. of the given model.
# H 0 has no chas while H1 has chas.
H3<-M_Boston2$coefficients[1]+M_Boston2$coefficients[2]*15
H4<-M_Boston2$coefficients[1]+M_Boston2$coefficients[2]*18
print(paste('Houses with a pupil-teacher ratio of 15, are more expensive and the most expensive was ',H3-H4 ))
summary(M_Boston)
anova(M_Boston)
knitr::opts_chunk$set(echo= TRUE)
set.seed(2017)
X=runif(100)*10
Y=X*4+3.45
Y=rnorm(100)*0.29*Y+Y
plot (X,Y)
M_XY=lm(Y~X)
summary(M_XY)
M_XY$coefficients
cor(X,Y)^2
head(mtcars)
J_model<-lm(mtcars$hp~mtcars$mpg,data=mtcars)
summary(J_model)
Ch_model<-lm(mtcars$hp~mtcars$mpg,data=mtcars)
summary(Ch_model)
M_HP<-lm(mtcars$hp~mtcars$mpg+mtcars$cyl,data=mtcars)
summary(M_HP)
M_HP$coefficients
predict_hp<-(M_HP$coefficients[2]*22)+(M_HP$coefficients[3]*4)+M_HP$coefficients[1]
print(paste('The predicted Horse power of a car with FOUR calenders and a 22-mpg fuel Economy is ',predict_hp))
library(mlbench)
data(BostonHousing)
M_Boston<-lm(formula = BostonHousing$medv~BostonHousing$crim+BostonHousing$zn+BostonHousing$ptratio+BostonHousing$chas,data=BostonHousing)
summary(M_Boston)
M_Boston1<-lm(formula=BostonHousing$medv~BostonHousing$chas, data=BostonHousing)
M_Boston1
# we can calculate the values of both houses by utilizing the coeff. from the given model.
# we are consider Two houses as H0 ,H1
# H 0  has no chas while H 1 has chas.
H0<-M_Boston1$coefficients[1]+M_Boston1$coefficients[2]*0
H1<-M_Boston1$coefficients[1]+M_Boston1$coefficients[2]*1
print(paste('The House with the chas and is more expensive,',H1-H0))
M_Boston2<-lm(formula=BostonHousing$medv~BostonHousing$ptratio,data=BostonHousing)
M_Boston2
# Because of the coeff.is negative ,we may deduce that increased ptratio will result in lower pricing.
# we may calculate the values of both houses using the coeff. of the given model.
# H 0 has no chas while H1 has chas.
H3<-M_Boston2$coefficients[1]+M_Boston2$coefficients[2]*15
H4<-M_Boston2$coefficients[1]+M_Boston2$coefficients[2]*18
print(paste('Houses with a pupil-teacher ratio of 15, are more expensive and the most expensive was ',H3-H4 ))
summary(M_Boston)
anova(M_Boston)
knitr::opts_chunk$set(echo = TRUE)
cc<-read.csv("FoodDelivery.csv")
cc<-read.csv("FoodDelivery.csv")
setwd("~/Documents/GitHub/Sbandhan_64060/final")
cc<-read.csv("FoodDelivery.csv")
summary(cc)
library(readr)
Cereals <- read_csv("~/Documents/Assignment5/Cereals.csv")
View(Cereals)
setwd("~/Documents/Assignment5")
C_df<-read.csv("cereals.csv")
str(C_df)
head(C_df)
install.packages("DataExplorer")
library(DataExplorer)
introduce(C_df)
C_df1<-na.omit(C_df)
C_df1$name<-as.factor(C_df1$name)
C_df1$mfr<-as.factor(C_df1$mfr)
C_df1$type<-as.factor(C_df1$type)
C_df1$shelf<-as.factor(C_df1$shelf)
# Creating dummy variables
vaar<-colnames(C_df1)
n_var<-c("calories","protein","fat","sodium","fiber","carbo","sugars","potass","vitamins","weight","cups","rating")
cat_var<-C_df1[which(colnames(C_df1)%in%c('name','mfr','type','shelf'))]
cat_var<-data.frame(apply(C_df1[which(colnames(C_df1)%in%c('name','mfr','type','shelf'))]),2,as.factor))
C_df1$name<-as.factor(C_df1$name)
C_df1$mfr<-as.factor(C_df1$mfr)
C_df1$type<-as.factor(C_df1$type)
C_df1$shelf<-as.factor(C_df1$shelf)
# Creating dummy variables
vaar<-colnames(C_df1)
n_var<-c("calories","protein","fat","sodium","fiber","carbo","sugars","potass","vitamins","weight","cups","rating")
cat_var<-C_df1[which(colnames(C_df1)%in%c('name','mfr','type','shelf'))]
cat_var<-data.frame(apply((C_df1[which(colnames(C_df1)%in%c('name','mfr','type','shelf'))]),2,as.factor))
dummy_vars<-fastDummies::dummy_columns(cat_var%>% select(-name))
C_df1$name<-as.factor(C_df1$name)
C_df1$mfr<-as.factor(C_df1$mfr)
C_df1$type<-as.factor(C_df1$type)
C_df1$shelf<-as.factor(C_df1$shelf)
# Creating dummy variables
vaar<-colnames(C_df1)
n_var<-c("calories","protein","fat","sodium","fiber","carbo","sugars","potass","vitamins","weight","cups","rating")
cat_var<-C_df1[which(colnames(C_df1)%in%c('name','mfr','type','shelf'))]
cat_var<-data.frame(apply((C_df1[which(colnames(C_df1)%in%c('name','mfr','type','shelf'))]),2,as.factor))
dummy_vars<-fastDummies::dummy_columns(cat_var %>% select(-name))
C_df1$name<-as.factor(C_df1$name)
C_df1$mfr<-as.factor(C_df1$mfr)
C_df1$type<-as.factor(C_df1$type)
C_df1$shelf<-as.factor(C_df1$shelf)
# Creating dummy variables
vaar<-colnames(C_df1)
n_var<-c("calories","protein","fat","sodium","fiber","carbo","sugars","potass","vitamins","weight","cups","rating")
cat_var<-C_df1[which(colnames(C_df1)%in%c('name','mfr','type','shelf'))]
cat_var<-data.frame(apply((C_df1[which(colnames(C_df1)%in%c('name','mfr','type','shelf'))]),2,as.factor))
dummy_vars<-fastDummies::dummy_columns(cat_var %>% select(-name))
C_df1$name<-as.factor(C_df1$name)
C_df1$mfr<-as.factor(C_df1$mfr)
C_df1$type<-as.factor(C_df1$type)
C_df1$shelf<-as.factor(C_df1$shelf)
# Creating dummy variables
vaar<-colnames(C_df1)
n_var<-c("calories","protein","fat","sodium","fiber","carbo","sugars","potass","vitamins","weight","cups","rating")
cat_var<-C_df1[which(colnames(C_df1)%in%c('name','mfr','type','shelf'))]
cat_var<-data.frame(apply((C_df1[which(colnames(C_df1)%in%c('name','mfr','type','shelf'))]),2,as.factor))
dummy_vars<-fastDummies::dummy_columns(cat_var%>% select(-name))
C_df1$name<-as.factor(C_df1$name)
C_df1$mfr<-as.factor(C_df1$mfr)
C_df1$type<-as.factor(C_df1$type)
C_df1$shelf<-as.factor(C_df1$shelf)
# Creating dummy variables
vaar<-colnames(C_df1)
n_var<-c("calories","protein","fat","sodium","fiber","carbo","sugars","potass","vitamins","weight","cups","rating")
cat_var<-C_df1[which(colnames(C_df1)%in%c('name','mfr','type','shelf'))]
cat_var<-data.frame(apply((C_df1[which(colnames(C_df1)%in%c('name','mfr','type','shelf'))]),2,as.factor))
dummy_vars<-fastDummies::dummy_columns(cat_var %>%  select(-name))
C_df1$name<-as.factor(C_df1$name)
C_df1$mfr<-as.factor(C_df1$mfr)
C_df1$type<-as.factor(C_df1$type)
C_df1$shelf<-as.factor(C_df1$shelf)
# Creating dummy variables
vaar<-colnames(C_df1)
n_var<-c("calories","protein","fat","sodium","fiber","carbo","sugars","potass","vitamins","weight","cups","rating")
cat_var<-C_df1[which(colnames(C_df1)%in%c('name','mfr','type','shelf'))]
cat_var<-data.frame(apply((C_df1[which(colnames(C_df1)%in%c('name','mfr','type','shelf'))]),2,as.factor))
dummy_vars<-fastDummies::dummy_columns(cat_var %>% select(-name))
C_df1$name<-as.factor(C_df1$name)
C_df1$mfr<-as.factor(C_df1$mfr)
C_df1$type<-as.factor(C_df1$type)
C_df1$shelf<-as.factor(C_df1$shelf)
# Creating dummy variables
vaar<-colnames(C_df1)
n_var<-c("calories","protein","fat","sodium","fiber","carbo","sugars","potass","vitamins","weight","cups","rating")
cat_var<-C_df1[which(colnames(C_df1)%in%c('name','mfr','type','shelf'))]
cat_var<-data.frame(apply((C_df1[which(colnames(C_df1)%in%c('name','mfr','type','shelf'))]),2,as.factor))
dummy_vars<-fastDummies::dummy_columns(cat_var %>% select(-name))
C_df2[,c(2:25)]<-scale(C_df2[,c(2:25)],scale = TRUE, center = TRUE)
install.packages("tidyverse")
install.packages("factoextra")
install.packages("dendextend")
install.packages("cluster")
install.packages("fastDummies")
library(tidyverse)
library(factoextra)
library(dendextend)
library(cluster)
library(fastDummies)
C_df1$name<-as.factor(C_df1$name)
C_df1$mfr<-as.factor(C_df1$mfr)
C_df1$type<-as.factor(C_df1$type)
C_df1$shelf<-as.factor(C_df1$shelf)
# Creating dummy variables
vaar<-colnames(C_df1)
n_var<-c("calories","protein","fat","sodium","fiber","carbo","sugars","potass","vitamins","weight","cups","rating")
cat_var<-C_df1[which(colnames(C_df1)%in%c('name','mfr','type','shelf'))]
cat_var<-data.frame(apply((C_df1[which(colnames(C_df1)%in%c('name','mfr','type','shelf'))]),2,as.factor))
dummy_vars<-fastDummies::dummy_columns(cat_var %>% select(-name))
n_vars<-C_df1[,c(4:12,14:16)]
C_df2<-cbind(Cereals_df1$name,dummy_vars,n_vars)%>% select(-c(mfr,type,shelf))
library(tidyverse)
library(factoextra)
library(dendextend)
library(cluster)
library(fastDummies)
C_df1$name<-as.factor(C_df1$name)
C_df1$mfr<-as.factor(C_df1$mfr)
C_df1$type<-as.factor(C_df1$type)
C_df1$shelf<-as.factor(C_df1$shelf)
# Creating dummy variables
vaar<-colnames(C_df1)
n_var<-c("calories","protein","fat","sodium","fiber","carbo","sugars","potass","vitamins","weight","cups","rating")
cat_var<-C_df1[which(colnames(C_df1)%in%c('name','mfr','type','shelf'))]
cat_var<-data.frame(apply((C_df1[which(colnames(C_df1)%in%c('name','mfr','type','shelf'))]),2,as.factor))
dummy_vars<-fastDummies::dummy_columns(cat_var %>% select(-name))
n_vars<-C_df1[,c(4:12,14:16)]
C_df2<-cbind(C_df1$name,dummy_vars,n_vars)%>% select(-c(mfr,type,shelf))
C_df2[,c(2:25)]<-scale(C_df2[,c(2:25)],scale = TRUE, center = TRUE)
library(tidyverse)
library(factoextra)
library(dendextend)
library(cluster)
library(fastDummies)
C_df1$name<-as.factor(C_df1$name)
C_df1$mfr<-as.factor(C_df1$mfr)
C_df1$type<-as.factor(C_df1$type)
C_df1$shelf<-as.factor(C_df1$shelf)
# Creating dummy variables
vaar<-colnames(C_df1)
n_var<-c("calories","protein","fat","sodium","fiber","carbo","sugars","potass","vitamins","weight","cups","rating")
cat_var<-C_df1[which(colnames(C_df1)%in%c('name','mfr','type','shelf'))]
cat_var<-data.frame(apply((C_df1[which(colnames(C_df1)%in%c('name','mfr','type','shelf'))]),2,as.factor))
dummy_vars<-fastDummies::dummy_columns(cat_var %>% select(-name))
n_vars<-C_df1[,c(4:12,14:16)]
C_df2<-cbind(C_df1$name,dummy_vars,n_vars)%>% select(-c(mfr,type,shelf))
C_df2[,c(2:25)]<-scale(C_df2[,c(2:25)],scale = TRUE, center = TRUE)
library(tidyverse)
library(factoextra)
library(dendextend)
library(cluster)
library(fastDummies)
C_df1$name<-as.factor(C_df1$name)
C_df1$mfr<-as.factor(C_df1$mfr)
C_df1$type<-as.factor(C_df1$type)
C_df1$shelf<-as.factor(C_df1$shelf)
# Creating dummy variables
vaar<-colnames(C_df1)
n_var<-c("calories","protein","fat","sodium","fiber","carbo","sugars","potass","vitamins","weight","cups","rating")
cat_var<-C_df1[which(colnames(C_df1)%in%c('name','mfr','type','shelf'))]
cat_var<-data.frame(apply((C_df1[which(colnames(C_df1)%in%c('name','mfr','type','shelf'))]),2,as.factor))
dummy_vars<-fastDummies::dummy_columns(cat_var %>% select(-name))
n_vars<-C_df1[,c(4:12,14:16)]
C_df2<-cbind(C_df1$name,dummy_vars,n_vars)%>% select(-c(mfr,type,shelf))
C_df2[,c(2:25)]<-scale(C_df2[,c(2:25)],scale = TRUE, center = TRUE)
Hclustering1<-agnes(C_df2,method="complete")
Hclustering2<-agnes(C_df2,method = "average")
Hclustering3<-agnes(C_df2,method="single")
Hclustering4<-agnes(C_df2,method="ward")
C_df<-read.csv("cereals.csv")
str(C_df)
head(C_df)
library(DataExplorer)
introduce(C_df)
C_df1<-na.omit(C_df)
library(tidyverse)
library(factoextra)
library(dendextend)
library(cluster)
library(fastDummies)
C_df1$name<-as.factor(C_df1$name)
C_df1$mfr<-as.factor(C_df1$mfr)
C_df1$type<-as.factor(C_df1$type)
C_df1$shelf<-as.factor(C_df1$shelf)
# Creating dummy variables
vaar<-colnames(C_df1)
n_var<-c("calories","protein","fat","sodium","fiber","carbo","sugars","potass","vitamins","weight","cups","rating")
cat_var<-C_df1[which(colnames(C_df1)%in%c('name','mfr','type','shelf'))]
cat_var<-data.frame(apply((C_df1[which(colnames(C_df1)%in%c('name','mfr','type','shelf'))]),2,as.factor))
dummy_vars<-fastDummies::dummy_columns(cat_var %>% select(-name))
n_vars<-C_df1[,c(4:12,14:16)]
C_df2<-cbind(C_df1$name,dummy_vars,n_vars)%>% select(-c(mfr,type,shelf))
C_df2[,c(2:25)]<-scale(C_df2[,c(2:25)],scale = TRUE, center = TRUE)
Hclustering1<-agnes(C_df2,method="complete")
Hclustering2<-agnes(C_df2,method = "average")
Hclustering3<-agnes(C_df2,method="single")
Hclustering4<-agnes(C_df2,method="ward")
Hclustering1<-agnes(C_df2,method="complete")
Hclustering2<-agnes(C_df2,method = "average")
Hclustering3<-agnes(C_df2,method="single")
Hclustering4<-agnes(C_df2,method="ward")
Ac<-c(Hclustering1$Ac,Hclustering2$Ac,Hclustering3$Ac,Hclustering4$Ac)
Ac_method<-c(Hclustering1$method,Hclustering2$method,Hclustering3$method,Hclustering4$method)
Ac_df<-data.frame(Ac_method,Ac)
Hclustering1<-agnes(C_df2,method="complete")
Hclustering2<-agnes(C_df2,method = "average")
Hclustering3<-agnes(C_df2,method="single")
Hclustering4<-agnes(C_df2,method="ward")
Ac<-c(Hclustering1$Ac,Hclustering2$Ac,Hclustering3$Ac,Hclustering4$Ac)
Ac_method<-c(Hclustering1$method,Hclustering2$method,Hclustering3$method,Hclustering4$method)
Ac_df<-data.frame(Ac_method, Ac)
Hclustering1<-agnes(C_df2,method="complete")
Hclustering2<-agnes(C_df2,method = "average")
Hclustering3<-agnes(C_df2,method="single")
Hclustering4<-agnes(C_df2,method="ward")
Ac<-c(Hclustering1$Ac,Hclustering2$Ac,Hclustering3$Ac,Hclustering4$Ac)
Ac_method<-c(Hclustering1$method,Hclustering2$method,Hclustering3$method,Hclustering4$method)
Ac_df<-data.frame(Ac_method, Ac)
Hclustering1<-agnes(C_df2,method="complete")
Hclustering2<-agnes(C_df2,method = "average")
Hclustering3<-agnes(C_df2,method="single")
Hclustering4<-agnes(C_df2,method="ward")
ac<-c(Hclustering1$Ac,Hclustering2$Ac,Hclustering3$Ac,Hclustering4$Ac)
ac_method<-c(Hclustering1$method,Hclustering2$method,Hclustering3$method,Hclustering4$method)
ac_df<-data.frame(ac_method, ac)
Hclustering1<-agnes(C_df2,method="complete")
Hclustering2<-agnes(C_df2,method = "average")
Hclustering3<-agnes(C_df2,method="single")
Hclustering4<-agnes(C_df2,method="ward")
Ac<-c(Hclustering1$Ac,Hclustering2$Ac,Hclustering3$Ac,Hclustering4$Ac)
Ac_method<-c(Hclustering1$method,Hclustering2$method,Hclustering3$method,Hclustering4$method)
Ac_df<-data.frame(Ac_method, Ac)
C_df2[,c(2:25)]<-scale(C_df2[,c(2:25)],scale = TRUE, center = TRUE)
Hclustering1<-agnes(C_df2,method="complete")
Hclustering2<-agnes(C_df2,method = "average")
Hclustering3<-agnes(C_df2,method="single")
Hclustering4<-agnes(C_df2,method="ward")
Ac<-c(Hclustering1$Ac,Hclustering2$Ac,Hclustering3$Ac,Hclustering4$Ac)
Ac_method<-c(Hclustering1$method,Hclustering2$method,Hclustering3$method,Hclustering4$method)
Ac_df<-data.frame(Ac_method, Ac)
library(tidyverse)
library(factoextra)
library(dendextend)
library(cluster)
library(fastDummies)
C_df1$name<-as.factor(C_df1$name)
C_df1$mfr<-as.factor(C_df1$mfr)
C_df1$type<-as.factor(C_df1$type)
C_df1$shelf<-as.factor(C_df1$shelf)
# Creating dummy variables
vaar<-colnames(C_df1)
n_var<-c("calories","protein","fat","sodium","fiber","carbo","sugars","potass","vitamins","weight","cups","rating")
cat_var<-C_df1[which(colnames(C_df1)%in%c('name','mfr','type','shelf'))]
cat_var<-data.frame(apply((C_df1[which(colnames(C_df1)%in%c('name','mfr','type','shelf'))]),2,as.factor))
dummy_vars<-fastDummies::dummy_columns(cat_var %>% select(-name))
n_vars<-C_df1[,c(4:12,14:16)]
C_df2<-cbind(C_df1$name,dummy_vars,n_vars)%>% select(-c(mfr,type,shelf))
library(tidyverse)
library(factoextra)
library(dendextend)
library(cluster)
library(fastDummies)
#
C_df1$name<-as.factor(C_df1$name)
C_df1$mfr<-as.factor(C_df1$mfr)
C_df1$type<-as.factor(C_df1$type)
C_df1$shelf<-as.factor(C_df1$shelf)
# Creating dummy variables
vaar<-colnames(C_df1)
n_var<-c("calories","protein","fat","sodium","fiber","carbo","sugars","potass","vitamins","weight","cups","rating")
cat_var<-C_df1[which(colnames(C_df1)%in%c('name','mfr','type','shelf'))]
cat_var<-data.frame(apply((C_df1[which(colnames(C_df1)%in%c('name','mfr','type','shelf'))]),2,as.factor))
dummy_vars<-fastDummies::dummy_columns(cat_var %>% select(-name))
n_vars<-C_df1[,c(4:12,14:16)]
C_df2<-cbind(C_df1$name,dummy_vars,n_vars)%>% select(-c(mfr,type,shelf))
Hclustering1<-agnes(C_df2,method="complete")
Hclustering2<-agnes(C_df2,method = "average")
Hclustering3<-agnes(C_df2,method="single")
Hclustering4<-agnes(C_df2,method="ward")
Ac<-c(Hclustering1$Ac,Hclustering2$Ac,Hclustering3$Ac,Hclustering4$Ac)
Ac_method<-c(Hclustering1$method,Hclustering2$method,Hclustering3$method,Hclustering4$method)
Ac_df<-data.frame(Ac_method, Ac)
C_df<-read.csv("cereals.csv")
str(C_df)
head(C_df)
library(DataExplorer)
introduce(C_df)
C_df1<-na.omit(C_df)
library(tidyverse)
library(factoextra)
library(dendextend)
library(cluster)
library(fastDummies)
#
C_df1$name<-as.factor(C_df1$name)
C_df1$mfr<-as.factor(C_df1$mfr)
C_df1$type<-as.factor(C_df1$type)
C_df1$shelf<-as.factor(C_df1$shelf)
# Creating dummy variables
vaar<-colnames(C_df1)
n_var<-c("calories","protein","fat","sodium","fiber","carbo","sugars","potass","vitamins","weight","cups","rating")
cat_var<-C_df1[which(colnames(C_df1)%in%c('name','mfr','type','shelf'))]
cat_var<-data.frame(apply((C_df1[which(colnames(C_df1)%in%c('name','mfr','type','shelf'))]),2,as.factor))
dummy_vars<-fastDummies::dummy_columns(cat_var %>% select(-name))
n_vars<-C_df1[,c(4:12,14:16)]
C_df2<-cbind(C_df1$name,dummy_vars,n_vars)%>% select(-c(mfr,type,shelf))
C_df2[,c(2:25)]<-scale(C_df2[,c(2:25)],scale = TRUE, center = TRUE)
Hclustering1<-agnes(C_df2,method="complete")
Hclustering2<-agnes(C_df2,method = "average")
Hclustering3<-agnes(C_df2,method="single")
Hclustering4<-agnes(C_df2,method="ward")
Ac<-c(Hclustering1$Ac,Hclustering2$Ac,Hclustering3$Ac,Hclustering4$Ac)
Ac_method<-c(Hclustering1$method,Hclustering2$method,Hclustering3$method,Hclustering4$method)
Ac_df<-data.frame(Ac_method, Ac)
Hclustering1<-agnes(C_df2,method="complete")
Hclustering2<-agnes(C_df2,method = "average")
Hclustering3<-agnes(C_df2,method="single")
Hclustering4<-agnes(C_df2,method="ward")
Ac<-c(Hclustering1$Ac,Hclustering2$Ac,Hclustering3$Ac,Hclustering4$Ac)
Ac_method<-c(Hclustering1$method,Hclustering2$method,Hclustering3$method,Hclustering4$method)
Ac_df<-data.frame(Ac_method, Ac)
Hclustering1<-agnes(C_df2,method="complete")
Hclustering2<-agnes(C_df2,method = "average")
Hclustering3<-agnes(C_df2,method="single")
Hclustering4<-agnes(C_df2,method="ward")
Ac<-C(Hclustering1$Ac,Hclustering2$Ac,Hclustering3$Ac,Hclustering4$Ac)
Hclustering1<-agnes(C_df2,method="complete")
Hclustering2<-agnes(C_df2,method = "average")
Hclustering3<-agnes(C_df2,method="single")
Hclustering4<-agnes(C_df2,method="ward")
Ac<-c(Hclustering1$Ac,Hclustering2$Ac,Hclustering3$Ac,Hclustering4$Ac)
Ac_method<-c(Hclustering1$method,Hclustering2$method,Hclustering3$method,Hclustering4$method)
Ac_df<-data.frame(Ac_method, Ac)
C_df<-read.csv("cereals.csv")
str(C_df)
head(C_df)
library(DataExplorer)
introduce(C_df)
C_df1<-na.omit(C_df)
library(tidyverse)
library(factoextra)
library(dendextend)
library(cluster)
library(fastDummies)
#
C_df1$name<-as.factor(C_df1$name)
C_df1$mfr<-as.factor(C_df1$mfr)
C_df1$type<-as.factor(C_df1$type)
C_df1$shelf<-as.factor(C_df1$shelf)
# Creating dummy variables
vaar<-colnames(C_df1)
n_var<-c("calories","protein","fat","sodium","fiber","carbo","sugars","potass","vitamins","weight","cups","rating")
cat_var<-C_df1[which(colnames(C_df1)%in%c('name','mfr','type','shelf'))]
cat_var<-data.frame(apply((C_df1[which(colnames(C_df1)%in%c('name','mfr','type','shelf'))]),2,as.factor))
dummy_vars<-fastDummies::dummy_columns(cat_var %>% select(-name))
n_vars<-C_df1[,c(4:12,14:16)]
C_df2<-cbind(C_df1$name,dummy_vars,n_vars)%>% select(-c(mfr,type,shelf))
C_df2[,c(2:25)]<-scale(C_df2[,c(2:25)],scale = TRUE, center = TRUE)
Hclustering1<-agnes(C_df2,method="complete")
Hclustering2<-agnes(C_df2,method = "average")
Hclustering3<-agnes(C_df2,method="single")
Hclustering4<-agnes(C_df2,method="ward")
Ac<-c(Hclustering1$Ac,Hclustering2$Ac,Hclustering3$Ac,Hclustering4$Ac)
Ac_method<-c(Hclustering1$method,Hclustering2$method,Hclustering3$method,Hclustering4$method)
Ac_df<-data.frame(Ac_method, Ac)
library(tidyverse)
library(factoextra)
library(dendextend)
library(cluster)
library(fastDummies)
C_df1$name<-as.factor(C_df1$name)
C_df1$mfr<-as.factor(C_df1$mfr)
C_df1$type<-as.factor(C_df1$type)
C_df1$shelf<-as.factor(C_df1$shelf)
# Creating dummy variables
vaar<-colnames(C_df1)
n_var<-c("calories","protein","fat","sodium","fiber","carbo","sugars","potass","vitamins","weight","cups","rating")
cat_var<-C_df1[which(colnames(C_df1)%in%c('name','mfr','type','shelf'))]
cat_var<-data.frame(apply((C_df1[which(colnames(C_df1)%in%c('name','mfr','type','shelf'))]),2,as.factor))
dummy_vars<-fastDummies::dummy_columns(cat_var %>% select(-name))
n_vars<-C_df1[,c(4:12,14:16)]
C_df2<-cbind(C_df1$name,dummy_vars,n_vars)%>% select(-c(mfr,type,shelf))
C_df2[,c(2:25)]<-scale(C_df2[,c(2:25)],scale = TRUE, center = TRUE)
Hclustering1<-agnes(C_df2,method="complete")
Hclustering2<-agnes(C_df2,method = "average")
Hclustering3<-agnes(C_df2,method="single")
Hclustering4<-agnes(C_df2,method="ward")
Ac<-c(Hclustering1$Ac,Hclustering2$Ac,Hclustering3$Ac,Hclustering4$Ac)
Ac_method<-c(Hclustering1$method,Hclustering2$method,Hclustering3$method,Hclustering4$method)
Ac_df<-data.frame(Ac_method, Ac)
h_cereals<-data.frame(C_df2 %>% filter(Cluster==2) %>% select_if(is.numeric) %>% colMeans())
library(caret)
set.seed(12)
split_index<-createDataPartition(C_df2$rating,p=0.6,times=1,list=FALSE)
C_part1<-C_df2[split_index,]
C_part2<-C_df2[-slipt_index,]
